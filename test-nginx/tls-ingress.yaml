apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  namespace: jiesuan
  labels:
    run: my-nginx
spec:
  ports:
  - port: 81
    protocol: TCP
  selector:
    run: my-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
  namespace: jiesuan
spec:
  selector:
    matchLabels:
      run: my-nginx
  replicas: 1
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx:1.10.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 81
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx
          readOnly: true
        - name: ssl-config
          mountPath: /etc/etcd/ssl
          readOnly: true
        - name: nginx-server-certs
          mountPath: /etc/nginx-server-certs
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-configmap
      - name: ssl-config
        configMap:
          name: ssl-configmap
      - name: nginx-server-certs
        secret:
          secretName: nginx-server-certs
---
# gateway配置
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: mygateway
  namespace: jiesuan
spec:
  selector:
    istio: ingressgateway # 使用 istio 默认的 ingress gateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: PASSTHROUGH
    hosts:
    - nginx.example.com
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - nginx.example.com
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: nginx
  namespace: jiesuan
spec:
  hosts:
  - nginx.example.com
  gateways:
  - mygateway
  tls:
  - match:
    - port: 443
      sni_hosts:
      - nginx.example.com
    route:
    - destination:
        host: my-nginx
        port:
          number: 81
  http:
  - match:
    - port: 80
    route:
    - destination:
        host: my-nginx
        # port:
        #   number: 81